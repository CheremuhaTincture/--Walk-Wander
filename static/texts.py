from dotenv import load_dotenv
from aiogram.types import Message

import os

import static.funcs as fs
import app.DataBase.requests as rq
import app.keyboards.keyboards as kb
import aiogram.exceptions as ae

def game_lobby(_key, _game_info, new_player_name, player_exit_name, player_erased_name, everybody_are_ready, prev_text):
    map_name = fs.map_name(_game_info['map_id'])
    map_size = fs.map_size(_game_info['map_size'])
    status = fs.game_status(_game_info['status'])
    num_of_players = _game_info['num_of_players']
    if not prev_text:
        text = f'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–≥—Ä—É ‚Ññ{_key}! –ñ–¥–µ–º –≤—Å–µ—Ö –∏–≥—Ä–æ–∫–æ–≤, –Ω–∞—á–∏–Ω–∞–µ–º –ø–æ –∫–æ–º–∞–Ω–¥–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞ –∏–≥—Ä—ã!\n'
        text += f'----------------------\n–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏–≥—Ä–µ:\n–ö–∞—Ä—Ç–∞: {map_name}\n'
        text += f'–†–∞–∑–º–µ—Ä –∫–∞—Ä—Ç—ã: {map_size}\n–°—Ç–∞—Ç—É—Å –∏–≥—Ä—ã: {status}\n----------------------\n'
        text += f'----------------------\n–¢–µ–∫—É—â–µ–µ —á–∏—Å–ª–æ –∏–≥—Ä–æ–∫–æ–≤: {num_of_players}\n–û–∂–∏–¥–∞–Ω–∏–µ –∏–≥—Ä–æ–∫–æ–≤...üïù'
    else:
        text0 = prev_text.split('----------------------')[0] + '----------------------\n'
        text1 = prev_text.split('----------------------')[1] + '----------------------'
        text_changed1 = prev_text.split('----------------------')[2]
        if new_player_name != None:
            text_changed1 += f'–ò–≥—Ä–æ–∫ {new_player_name} –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è(–ª–∞—Å—å)!\n'
        if player_exit_name != None:
            text_changed1 += f'–ò–≥—Ä–æ–∫ {player_exit_name} –ø–æ–∫–∏–Ω—É–ª(–ª–∞) –ª–æ–±–±–∏!\n'
        if player_exit_name != None:
            text_changed1 += f'–ò–≥—Ä–æ–∫ {player_erased_name} –ø–æ–∫–∏–Ω—É–ª(–ª–∞) –∏–≥—Ä—É!\n'
        text_changed1 += '----------------------\n'
        if everybody_are_ready and (num_of_players != 1):
            text_changed2 = f'–¢–µ–∫—É—â–µ–µ —á–∏—Å–ª–æ –∏–≥—Ä–æ–∫–æ–≤: {num_of_players}\n–í—Å–µ –≥–æ—Ç–æ–≤—ã, –º–æ–∂–µ–º –Ω–∞—á–∏–Ω–∞—Ç—å!‚öîÔ∏è'
        if everybody_are_ready and (num_of_players == 1):
            text_changed2 = f'–¢–µ–∫—É—â–µ–µ —á–∏—Å–ª–æ –∏–≥—Ä–æ–∫–æ–≤: {num_of_players}\n–û–∂–∏–¥–∞–Ω–∏–µ –∏–≥—Ä–æ–∫–æ–≤...üïù'
        if (not everybody_are_ready) and (num_of_players != 1):
            text_changed2 = f'–¢–µ–∫—É—â–µ–µ —á–∏—Å–ª–æ –∏–≥—Ä–æ–∫–æ–≤: {num_of_players}\n–û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∏–≥—Ä–æ–∫–æ–≤...üïù'
        text = text0 + text1 + text_changed1 + text_changed2
    return text

async def get_sample_message_text(__key, message: Message):
    _message_id = await rq.get_message_id(__key)

    msg = await message.bot.forward_message(chat_id=int(os.getenv('SPAM_GROUP')),
                                      from_chat_id=int(os.getenv('SPAM_GROUP')),
                                      message_id=_message_id)
    
    return msg.text

async def change_text(__key, _text, message: Message):
    message_n_chat_ids = await rq.get_main_message_ids(__key)

    for id in message_n_chat_ids:
        try:
            if await rq.player_is_admin(id.split('_')[1], __key):
                await message.bot.edit_message_text(message_id=id.split('_')[0],
                                                    chat_id=id.split('_')[1],
                                                    text=_text,
                                                    reply_markup = await kb.game_management_menu_keys(_key=__key))
            else:
                await message.bot.edit_message_text(message_id=id.split('_')[0],
                                                    chat_id=id.split('_')[1],
                                                    text=_text,
                                                    reply_markup=kb.back_to_menu_from_lobby)
        except ae.TelegramBadRequest:
            continue